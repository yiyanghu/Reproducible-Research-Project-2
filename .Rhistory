par()
rmls()
rm(ls())
clear
par(mfcol)
par(mfcol())
par(mfrow)
par(col)
par("mfcol")
library(swirl)
swirl()
library(swirl)
swirl()
exit
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
hc
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram((hc)))
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
library(swirl)
swirl()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
4
5
3
12
abline(h=0.05,col="green")
dist(dFsm)
hc
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
dendrogram(denmt)
denmt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch = 3,cex = 2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,center=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch = 19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
sournce("addPatt.R",local = TRUE)
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$d[1] %*% (svd1$u[,1],svd1$d[1])
a1 <-  svd1$u[,1] %*% svd1$d[1]
a1 <-  svd1$u[,1] * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u %*% svd1$d[2] %*% t(svd1$v[,2])
a2 <- svd1$u * svd1$d[2] %*% t(svd1$v[,2])
a2 <- svd1$u[,2] %*% svd1$d[2] %*% t(svd1$v[,2])
a2 <- svd1$u[,2] %*% svd1$d[1:2] %*% t(svd1$v[,2])
a2 <- svd1$u[,2]  %*% t(svd1$v[,2]) %*% svd1$d[1:2]
a2 <- svd1$d[1:2] %*%  svd1$u[,2]  %*% t(svd1$v[,2])
a2 <- svd1$d[1:2] *  svd1$u[,2]  %*% t(svd1$v[,2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage*svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(a2)
myImage(a2)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
info()
skip()
swirl()
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names[,562:563]
names[562,563]
names(562,563)
names(ssd[,562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject = 1)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col= unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[10:12],maxCon))
mdist <- dist(c(sub1[,10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)],centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)],centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kCluster$center)
dim(kClust$center)
dim(kClust$centers)
laying <- which(kClust$size ==29)
plot(kClust$centers[laying,1:12],pch=19,ylab= "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab= "Walkdown Cluster")
getwd()
setwd("~/CourseraProjects/Reproducible_Research/Course Project 2")
# Reproducible Research: Peer Assessment 1
# Reproducible Research: Peer Assessment 1
2.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
1.Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r cache=TRUE}
setwd("~/CourseraProjects/Reproducible_Research/RepData_PeerAssessment1")
stepsMean<- aggregate(steps ~ interval, data= dataNoNa, subset=dataNoNa$dayType == type, FUN = mean)
getwd()
dataNoNa$dayType <-ifelse(weekdays(dataNoNa$date) %in% c("Saturday","Sunday"),"weekend","weekday")
---
setwd("~/CourseraProjects/Reproducible_Research/Course Project 2")
names(rawData)
rawData  <- read.csv("repdata%2Fdata%2FStormData.csv.bz2")
dim(rawData)
```{r pressure, echo=TRUE, cache=TRUE}
data <-rawData[variables]
data <-rawData[,variables]
data <-rawData[variables]
data <-rawData[,variables]
dim(data)
dim(data)
dim(rawData)
variable
variables
variable.names()
data <-rawData[,variNames]
```{r cache=FALSE}
```{r cache=TRUE}
test <- c("STATE", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP","CROPDMG", "CROPDMGEXP")
test
injury10 <- injury[order(~injury$INJURIES),][1:10,]
injury <- aggregate(INJURIES ~EVTYPE, data, FUN =sum)
injury10 <- injury[order(-injury$INJURIES),][1:10,]
head(fatal10)
head(fatal)
head(data)
dim(data)
fatal <-aggregate(FATALITIES ~ EVTYPE, data, FUN =sum)
fatal10 <- fatal[order(-fatal$FATALITIES),][1:10,]
injury10 <- injury[order(-injury$INJURIES),][1:10,]
injury <- aggregate(INJURIES ~ EVTYPE, data = data, sum)
fatalorder <- fatal[order(fatal$FATALITIES, decreasing = TRUE), ]
``` {r cache= FALSE}
``` {r cache= TRUE}
fatal <- aggregate(FATALITIES ~ EVTYPE, data = data, sum)
head(data)
dim(data)
dim(rawData)
dim(data)
``` {r}
``` {r cache= FALSE}
dim(data)
dim(rawData)
``` {r}
```{r}
head(injuryorder)
head(data)
dim(data)
dim(rawData)
* CROPDMG
* CROPDMG
* CROPDMGEXP
head(injuryorder)
head(injury)
---
title: "Storms and other weather events’ impact on health and economics"
author: "Yiyang Hu"
date: "August 20, 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Synopsis
To fill after analysis is completed
## Questions Addressed
1. Across the United States, which types of events (as indicated in the 𝙴𝚅𝚃𝚈𝙿𝙴 variable) are most harmful with respect to population health?
1. Across the United States, which types of events have the greatest economic consequences?
## Data Processing
```{r pressure, cache=TRUE}
rawData  <- read.csv("repdata%2Fdata%2FStormData.csv.bz2")
